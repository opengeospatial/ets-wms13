<?xml version="1.0" encoding="utf-8"?>
<ctl:package
 xmlns:wms-1.3.0="https://cite.opengeospatial.org/wms-1.3.0/src/ctl"
 xmlns:main="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/main.xml"
 xmlns:functions="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/functions.xml"
 xmlns:basic_elements="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/basic_elements.xml"
 xmlns:getcapabilities="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getcapabilities.xml"
 xmlns:getmap="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getmap.xml"
 xmlns:getfeatureinfo="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getfeatureinfo.xml"
 xmlns:recommendations="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/recommendations.xml"
 xmlns:dims="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/dimensions.xml"
 xmlns:interactive="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/interactive.xml"
 xmlns:basic="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/basic.xml"
 xmlns:queryable="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/queryable.xml"
 xmlns:raster_elevation="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/raster_elevation.xml"
 xmlns:vector_elevation="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/vector_elevation.xml"
 xmlns:time="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/time.xml"
 xmlns:ccf="http://www.opengis.net/cite/complex"
 xmlns:cdf="http://www.opengis.net/cite/data"
 xmlns:cgf="http://www.opengis.net/cite/geometry"
 xmlns:citef="http://www.opengis.net/cite/functions"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:ogc="http://www.opengis.net/ogc"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:wms="http://www.opengis.net/wms"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:xi="http://www.w3.org/2001/XInclude">

   <xi:include href="functions.xml"/>
   <xi:include href="basic_elements.xml"/>
   <xi:include href="interactive.xml"/>
   <xi:include href="getcapabilities.xml"/>
   <xi:include href="dimensions.xml"/>
   <xi:include href="getmap.xml"/>
   <xi:include href="getfeatureinfo.xml"/>
   <xi:include href="recommendations.xml"/>
   <xi:include href="basic.xml"/>
   <xi:include href="queryable.xml"/>
   <xi:include href="raster_elevation.xml"/>
   <xi:include href="vector_elevation.xml"/>
   <xi:include href="time.xml"/>

   <ctl:suite name="wms-1.3.0:ets-wms13">
      <ctl:title>Web Map Service (WMS) 1.3.0</ctl:title>
      <ctl:description>Validates that a WMS 1.3.0 is compliant.</ctl:description>
      <ctl:link>docs/wms/1.3.0/</ctl:link>
      <ctl:link>data/data-wms-1.3.0.zip</ctl:link>
      <ctl:starting-test>main:main</ctl:starting-test>
      <ctl:form xmlns="">
            <h3>Web Map Service 1.3.0</h3>

            <h4>Test Overview and Reference Implementations</h4>
            <p>Complete information about this test suite can be found <a href="." target="_blank">here</a>.</p>
            <p>Reference implementations can be found <a href="http://cite.opengeospatial.org/reference" target="_blank">here</a>.</p>

            <br/>
            <h4>Capabilities Setup</h4>
            <p>
               Enter a capabilities document URL below. The URL may point to a static capabilities document or a GetCapabilities request from a WMS. A typical GetCapabilities request will look as follows:
            </p>
            <pre>http://hostname/path?SERVICE=WMS&amp;REQUEST=GetCapabilities&amp;VERSION=1.3.0</pre>
            <br/>
            <blockquote>
               <table border="3" padding="3">
                  <tr>
                     <td align="center">
                        <input name="capabilities-url" size="100" type="text" value=""/>
                     </td>
                     <td align="left">Capabilities URL</td>
                  </tr>
               </table>
            </blockquote>
            <br/>
            <h4>UpdateSequence Values</h4>
            <p>
               The WMS specification allows servers to use an UpdateSequence value for
               maintaining cache consistency as described in 
               <a href="http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getcapabilities.params.updatesequence">Section 7.2.3.5 of the specification</a>.
               If the server advertises an UpdateSequence value and the
               Automatic option is selected below, the test suite will attempt to
               test the UpdateSequence behavior automatically. However, the
               lexical ordering of UpdateSequence values is determined by the
               server, so the tests may not always be correct. If you suspect a
               problem, select the Manual option and enter the updateSequence
               values requested below.
            </p>
            <blockquote>
               <table border="3" padding="3">
                  <tr>
                     <td align="center">
                        <input checked="checked" name="updatesequence" type="radio" value="auto"/>
                     </td>
                     <td align="left">Automatic - The updateSequence tests will use automatically generated updateSequence values</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="updatesequence" type="radio" value="manual"/>
                     </td>
                     <td align="left">Manual - The updateSequence tests will use the values supplied below</td>
                  </tr>
               </table>
            </blockquote>
            <p>(Fill in these boxes if the Manual option is selected above)</p>
            <blockquote>
               <table border="3" padding="3">
                  <tr>
                     <td align="center">
                        <input name="high-updatesequence" size="25" type="text" value=""/>
                     </td>
                     <td align="left">A value that is lexically higher than the current updateSequence value</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="low-updatesequence" size="25" type="text" value=""/>
                     </td>
                     <td align="left">A value that is lexically lower than the current updateSequence value</td>
                  </tr>
               </table>
            </blockquote>
            <br/>
            <h4>Options</h4>
            <blockquote>
               <table border="3" padding="3">
                  <tr>
                     <td align="center">
                        <input name="basic" type="checkbox" value="basic" checked="checked"/>
                     </td>
                     <td align="left">BASIC - Test basic functionality that depends on the CITE dataset.  This option is required for certification.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="queryable" type="checkbox" value="queryable" checked="checked"/>
                     </td>
                     <td align="left">QUERYABLE - Test GetFeatureInfo functionality that depends on the CITE dataset.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="raster_elevation" type="checkbox" value="raster_elevation"/>
                     </td>
                     <td align="left">RASTER ELEVATION - Test the elevation dimension using the cite:Terrain raster dataset.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="vector_elevation" type="checkbox" value="vector_elevation"/>
                     </td>
                     <td align="left">VECTOR ELEVATION - Test the elevation dimension using the cite:Lakes vector dataset.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="time" type="checkbox" value="time"/>
                     </td>
                     <td align="left">TIME - Test the time dimension using the cite:Autos dataset.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="recommended" type="checkbox" value="recommended"/>
                     </td>
                     <td align="left">RECOMMENDATIONS - Test functionality which is recommended in the specification.</td>
                  </tr>
                  <tr>
                     <td align="center">
                        <input name="skip-vector-tests" type="checkbox" value="skip-vector-tests"/>
                     </td>
                     <td align="left">Skip basic tests using vector layers.</td>
                  </tr>
               </table>
            </blockquote>
            <br/>
            <input type="submit" value="OK"/>
      </ctl:form>
   </ctl:suite>

   <ctl:test name="main:main">
      <ctl:param name="capabilities-url"/>
      <ctl:param name="updatesequence"/>
      <ctl:param name="high-updatesequence"/>
      <ctl:param name="low-updatesequence"/>
      <ctl:param name="basic" />
      <ctl:param name="queryable"/>
      <ctl:param name="raster_elevation"/>
      <ctl:param name="vector_elevation"/>
      <ctl:param name="time"/>
      <ctl:param name="recommended"/>
      <ctl:param name="skip-vector-tests"/>
      <ctl:assertion>The implementation under test complies with the WMS 1.3.0 specification.</ctl:assertion>
      <ctl:code>
         <xsl:variable name="capabilities">
            <ctl:request>
               <ctl:url>
                  <xsl:value-of select="$capabilities-url"/>
               </ctl:url>
               <ctl:method>get</ctl:method>
            </ctl:request>
         </xsl:variable>

         <xsl:variable name="high-updatesequence">
            <xsl:choose>
               <xsl:when test="$updatesequence = 'auto'">
                  <xsl:value-of select="functions:increment-updatesequence($capabilities/wms:WMS_Capabilities/@updateSequence, 1)"/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:value-of select="$high-updatesequence"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>

         <xsl:variable name="low-updatesequence">
            <xsl:choose>
               <xsl:when test="$updatesequence = 'auto'">
                  <xsl:value-of select="functions:increment-updatesequence($capabilities/wms:WMS_Capabilities/@updateSequence, -1)"/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:value-of select="$low-updatesequence"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>

         <xsl:if test="not($capabilities/wms:WMS_Capabilities)">
            <ctl:message>Error: The capabilities document does not contain a root element named WMS_Capabilities in the &quot;http://www.opengis.net/wms&quot; namespace.</ctl:message>
            <ctl:message>Further processing suspended.</ctl:message>
            <ctl:fail/>
         </xsl:if>

         <ctl:for-each select="$capabilities/wms:WMS_Capabilities">

            <ctl:call-test name="main:data-independent">
               <ctl:with-param name="high-updatesequence" select="$high-updatesequence"/>
               <ctl:with-param name="low-updatesequence" select="$low-updatesequence"/>
            </ctl:call-test>

            <xsl:if test="$basic='basic' or $queryable='queryable'">
               <ctl:call-test name="main:data-preconditions">
                  <ctl:with-param name="raster_elevation" select="$raster_elevation"/>
                  <ctl:with-param name="time" select="$time"/>
                  <ctl:with-param name="skip-vector-tests" select="$skip-vector-tests"/>
               </ctl:call-test>
            </xsl:if>

            <xsl:if test="$basic='basic'">
               <ctl:call-test name="basic:basic">
                  <ctl:with-param name="is-interactive-enabled" select="'yes'"/>
                  <ctl:with-param name="skip-vector-tests" select="$skip-vector-tests"/>
               </ctl:call-test>
            </xsl:if>

            <xsl:if test="$queryable='queryable'">
               <ctl:call-test name="queryable:queryable"/>
            </xsl:if>

            <xsl:if test="$raster_elevation='raster_elevation'">
               <ctl:call-test name="raster_elevation:raster_elevation"/>
            </xsl:if>

            <xsl:if test="$vector_elevation='vector_elevation'">
               <ctl:call-test name="vector_elevation:vector_elevation"/>
            </xsl:if>

            <xsl:if test="$time='time'">
               <ctl:call-test name="time:time"/>
            </xsl:if>

            <xsl:if test="$recommended = 'recommended'">
               <ctl:call-test name="recommendations:recommendations"/>
            </xsl:if>

         </ctl:for-each>
      </ctl:code>
   </ctl:test>

   <ctl:test name="main:data-independent" isConformanceClass="true" isBasic="true">
      <ctl:param name="high-updatesequence"/>
      <ctl:param name="low-updatesequence"/>
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>Dataset independent request behaves properly.</ctl:assertion>
      <ctl:code>
         <xsl:variable name="exhaustive">
            <xsl:if test="function-available('te:isWeb')" xmlns:te="http://www.occamlab.com/te">
               <xsl:if test="string(te:isWeb()) = 'false'">
                  <xsl:variable name="form-results">
                     <xsl:variable name="combinations">
                        <xsl:for-each select="//wms:Layer[wms:Name]">
                           <xsl:for-each select="ancestor-or-self::wms:Layer/wms:CRS[not(. = ../ancestor::wms:Layer/wms:CRS)]">
                              <x/>
                           </xsl:for-each>
                        </xsl:for-each>
                     </xsl:variable>
                     <ctl:form xmlns="">
                        <p>
                           Do you want to exhaustively test each Layer/CRS combination?<br/>
                           There are <xsl:value-of select="count($combinations/x)"/> combinations to test.
                        </p>
                        <p>
                           <input type="submit" name="answer" value="yes"/>
                           <input type="submit" name="answer" value="no"/>
                        </p>
                     </ctl:form>
                  </xsl:variable>
                  <xsl:if test="$form-results/values/value[@key='answer']='yes'">exhaustive</xsl:if>
               </xsl:if>
            </xsl:if>
         </xsl:variable>

         <ctl:call-test name="interactive:interactive"/>

         <ctl:call-test name="basic_elements:basic_elements"/>

         <ctl:call-test name="getcapabilities:getcapabilities">
            <ctl:with-param name="high-updatesequence" select="$high-updatesequence"/>
            <ctl:with-param name="low-updatesequence" select="$low-updatesequence"/>
         </ctl:call-test>

         <ctl:call-test name="getmap:getmap">
            <ctl:with-param name="exhaustive" select="$exhaustive"/>
         </ctl:call-test>

         <ctl:call-test name="getfeatureinfo:getfeatureinfo"/>

         <ctl:call-test name="dims:dims"/>
      </ctl:code>
   </ctl:test>

   <ctl:test name="main:data-preconditions" isConformanceClass="true" isBasic="true">
      <ctl:param name="skip-vector-tests"/>
      <ctl:param name="raster_elevation"/>
      <ctl:param name="time"/>
      <ctl:context>Capabilities XML</ctl:context>
      <ctl:assertion>The server implements the CITE standard dataset in subsettable, resizable layers that support CRS:84.</ctl:assertion>
      <ctl:link title="Test requirements">docs/wms/1.3.0/#requirements</ctl:link>
      <ctl:code>
         <xsl:variable name="root-layer" select="wms:Capability/wms:Layer"/>
         <xsl:variable name="titles">
         <xsl:if test="not($skip-vector-tests='skip-vector-tests')">
                <title>cite:BasicPolygons</title>
                <title>cite:Bridges</title>
                <title>cite:Buildings</title>
                <title>cite:DividedRoutes</title>
                <title>cite:Forests</title>
                <title>cite:Lakes</title>
                <title>cite:MapNeatline</title>
                <title>cite:NamedPlaces</title>
                <title>cite:Ponds</title>
                <title>cite:RoadSegments</title>
                <title>cite:Streams</title>
            </xsl:if>
            <xsl:if test="$raster_elevation='raster_elevation'">
               <title>cite:Terrain</title>
            </xsl:if>
            <xsl:if test="$time='time'">
               <title>cite:Autos</title>
            </xsl:if>
         </xsl:variable>
         <xsl:for-each select="$titles/title">
            <xsl:variable name="title" select="."/>
            <xsl:variable name="layer" select="$root-layer/descendant-or-self::wms:Layer[wms:Title = $title]"/>
            <xsl:choose>
               <xsl:when test="not($layer/wms:Title)">
                  <ctl:message>Error: No layer titled <xsl:value-of select="$title"/> found.</ctl:message>
                  <ctl:fail/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:if test="not($layer/ancestor-or-self::wms:Layer[wms:CRS = 'CRS:84'])">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must support CRS:84.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
                  <xsl:if test="functions:boolean-as-integer($layer/@noSubsets) = 1">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must allow subsets.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
                  <xsl:if test="functions:boolean-as-integer($layer/@fixedWidth) != 0">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must not have a fixed size.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:for-each>
      </ctl:code>
   </ctl:test>

</ctl:package>

